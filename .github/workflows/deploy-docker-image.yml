name: Build docker image and Deploy to Artifact Registry

on:
  push:
    branches: ["main"]

env:
  IMAGE: asia-northeast3-docker.pkg.dev/heekkr/heekkr-docker/heekkr-resolver-simple

jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    environment: gcp
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER }}"
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v2"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "asia-northeast3-docker.pkg.dev"

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    environment: gcp
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER }}"
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v2"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "asia-northeast3-docker.pkg.dev"

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE }}:${{ steps.meta.outputs.version }}


  deploy:
    permissions:
      id-token: "write"
    runs-on: ubuntu-latest
    environment: gcp
    needs:
      - merge
    steps:
      - name: Google Auth
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER }}"
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT_RUN_DEPLOY }}"

      - id: deploy
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: resolver-simple
          image: "${{ env.IMAGE }}:main"
          region: asia-northeast3

      - name: Endpoint
        run: 'curl "${{ steps.deploy.outputs.url }}"'
